// 68. Выравнивание текста по ширине

// Учитывая массив строк words и ширину maxWidth, отформатируйте текст так, 
// чтобы в каждой строке было ровно maxWidth символов и чтобы текст был полностью 
// (слева и справа) выровнен по ширине.

// Вы должны расположить слова в жадном порядке, то есть расположить в каждой строке 
// как можно больше слов. При необходимости добавьте дополнительные пробелы ' ', 
// чтобы в каждой строке было ровно maxWidth символов.

// Дополнительные пробелы между словами должны быть распределены как можно более равномерно. 
// Если количество пробелов в строке неравномерно распределяется между словами, 
// пустым местам слева будет отведено больше пробелов, чем местам справа.

// Что касается последней строки текста, то она должна быть выровнена по левому краю, 
// и между словами не должно быть лишних пробелов.

// Примечание:
// Слово определяется как последовательность символов, состоящая только из символов без пробелов.
// Длина каждого слова гарантированно больше 0 и не превышает maxWidth.
// Входной массив words содержит хотя бы одно слово.
 
// Пример 1:
// Входные данные: words = ["Это", "пример", "текстового", "обоснования."], maxWidth = 16
// Выходные данные:
// [
//    "Это    пример",
//    "текстового обоснования",
//    "обоснование.  "
// ]

// Пример 2:
// Входные данные: слова = ["Что","должно","быть","подтверждением","должно","быть"], 
// максимальная ширина = 16
// Вывод:
// [
//   "Что   должно   быть",
//   "подтверждением  ",
//   "должно быть        "
// ]
// Объяснение: обратите внимание, что в последней строке написано 
// «shall be    » вместо «shall     be», 
// потому что последняя строка должна быть выровнена по левому краю, а не по ширине.
// Обратите внимание, что вторая строка также выровнена по левому краю, 
// потому что содержит только одно слово.

// Пример 3:
// Входные данные: 
// слова = ["Наука — это то, что мы понимаем достаточно хорошо, чтобы объяснить это компьютеру. Искусство — это всё остальное, что мы делаем"], 
// максимальная ширина = 20
// Выходные данные:
// [
//   "Наука — это то, что мы",
//   "понимаем достаточно хорошо",
//   "чтобы объяснить это",
//   "компьютеру. Искусство — это",
//   "всё остальное, что мы",
//   "делаем                  "
// ]
 
// Ограничения:
// 1 <= слов.длина <= 300
// 1 <= слов[i].длина <= 20
// слов[i] состоит только из английских букв и символов.
// 1 <= Максимальная ширина <= 100
// слов[i].длина <= Максимальная ширина

// 68. Text Justification // LeetCode URL: https://leetcode.com/problems/text-justification/description/?envType=study-plan-v2&envId=top-interview-150

Функция ВыровнятьТекст(МассивСлов, МаксимальнаяШирина) 
    // Результирующий массив строк, который будет содержать выровненный текст
    Результат = Новый Массив;

    // Массив для хранения слов текущей строки
    ТекущаяСтрокаСлова = Новый Массив;

    // Длина текущей строки без учета пробелов
    ДлинаТекущейСтроки = 0;

    // Обрабатываем каждое слово из массива слов
    Для Каждого Слово Из МассивСлов Цикл
        // Вычисляем длину текущего слова
        ДлинаСлова = СтрДлина(Слово);

        // Вычисляем общую длину текущей строки с учетом пробелов между словами
		// Количество пробелов = количество слов в текущей строке - 1
		КоличествоПробеловМеждуСловами = ТекущаяСтрокаСлова.Количество();

        ОбщаяДлинаСтрокиСПробелами = ДлинаТекущейСтроки + КоличествоПробеловМеждуСловами + ДлинаСлова;

        // Если текущее слово не помещается в строку, выравниваем текущую строку и добавляем её в результат
        Если ОбщаяДлинаСтрокиСПробелами > МаксимальнаяШирина Тогда
            ВыровненнаяСтрока = ВыровнятьСтроку(ТекущаяСтрокаСлова, ДлинаТекущейСтроки, МаксимальнаяШирина, Ложь);
            Результат.Добавить(ВыровненнаяСтрока);

            // Очищаем текущую строку для следующего набора слов
            ТекущаяСтрокаСлова = Новый Массив;
            ДлинаТекущейСтроки = 0;
        КонецЕсли;

        // Добавляем текущее слово в строку
        ТекущаяСтрокаСлова.Добавить(Слово);
        ДлинаТекущейСтроки = ДлинаТекущейСтроки + ДлинаСлова;
    КонецЦикла;

    // Обрабатываем последнюю строку (выравнивание по левому краю)
    ВыровненнаяСтрока = ВыровнятьСтроку(ТекущаяСтрокаСлова, ДлинаТекущейСтроки, МаксимальнаяШирина, Истина);
    Результат.Добавить(ВыровненнаяСтрока);

    Возврат Результат;
КонецФункции

Функция ВыровнятьСтроку(СловаВСтроке, ДлинаСтроки, МаксимальнаяШирина, ЭтоПоследняяСтрока)
    // Результирующая строка, которая будет содержать выровненные слова
    РезультирующаяСтрока = "";

    // Если это последняя строка или строка содержит только одно слово,
    // выравниваем её по левому краю
    Если ЭтоПоследняяСтрока ИЛИ СловаВСтроке.Количество() = 1 Тогда
        // Соединяем слова с одним пробелом между ними
        Для Индекс = 0 По СловаВСтроке.Количество() - 1 Цикл
            РезультирующаяСтрока = РезультирующаяСтрока + СловаВСтроке[Индекс];
            Если Индекс <> СловаВСтроке.Количество() - 1 Тогда
                РезультирующаяСтрока = РезультирующаяСтрока + " ";
            КонецЕсли;
        КонецЦикла;

        // Добавляем пробелы в конец строки, чтобы достичь максимальной ширины
        Пока СтрДлина(РезультирующаяСтрока) < МаксимальнаяШирина Цикл
            РезультирующаяСтрока = РезультирующаяСтрока + " ";
        КонецЦикла;
    Иначе
        // Рассчитываем общее количество пробелов, которые нужно добавить
        ОбщееКоличествоПробелов = МаксимальнаяШирина - ДлинаСтроки;

        // Количество промежутков между словами
        КоличествоПромежутковМеждуСловами = СловаВСтроке.Количество() - 1;

        // Равномерное количество пробелов между словами
        ПробеловМеждуСловами = Цел(ОбщееКоличествоПробелов / КоличествоПромежутковМеждуСловами);

        // Дополнительные пробелы, которые нужно распределить слева направо
        ДополнительныеПробелы = ОбщееКоличествоПробелов % КоличествоПромежутковМеждуСловами;

        // Строим строку с равномерно распределенными пробелами
        Для Индекс = 0 По СловаВСтроке.Количество() - 1 Цикл
            РезультирующаяСтрока = РезультирующаяСтрока + СловаВСтроке[Индекс];

            // Если это не последнее слово, добавляем пробелы
            Если Индекс < СловаВСтроке.Количество() - 1 Тогда
                // Распределяем дополнительные пробелы
                ПробелыДляДобавления = ПробеловМеждуСловами + ?(Индекс < ДополнительныеПробелы, 1, 0);
                Для СчетчикПробелов = 1 По ПробелыДляДобавления Цикл
                    РезультирующаяСтрока = РезультирующаяСтрока + " ";
                КонецЦикла;
            КонецЕсли;
        КонецЦикла;
    КонецЕсли;

    Возврат РезультирующаяСтрока;
КонецФункции


Процедура ПриНачалеРаботыСистемы()
    // Пример 1
    Слова1 = Новый Массив;
    Слова1.Добавить("This");
    Слова1.Добавить("is");
    Слова1.Добавить("an");
    Слова1.Добавить("example");
    Слова1.Добавить("of");
    Слова1.Добавить("text");
    Слова1.Добавить("СчетчикПробеловustification.");
    МаксимальнаяШирина1 = 16;
    Результат1 = ВыровнятьТекст(Слова1, МаксимальнаяШирина1);
    Сообщить("Результат для примера 1:");
    Для Каждого Строка Из Результат1 Цикл
        Сообщить(Строка);
    КонецЦикла;

    // Пример 2
    Слова2 = Новый Массив;
    Слова2.Добавить("What");
    Слова2.Добавить("must");
    Слова2.Добавить("be");
    Слова2.Добавить("acknowledgment");
    Слова2.Добавить("shall");
    Слова2.Добавить("be");
    МаксимальнаяШирина2 = 16;
    Результат2 = ВыровнятьТекст(Слова2, МаксимальнаяШирина2);
    Сообщить("Результат для примера 2:");
    Для Каждого Строка Из Результат2 Цикл
        Сообщить(Строка);
	КонецЦикла;        
	
    // Пример 3
    Слова3 = Новый Массив;
    Слова3.Добавить("До");
    Слова3.Добавить("чего");
    Слова3.Добавить("же");
    Слова3.Добавить("бывают");
    Слова3.Добавить("люди");
    Слова3.Добавить("до");
    Слова3.Добавить("чужого");
    Слова3.Добавить("добра");
    Слова3.Добавить("жадные");                   
	МаксимальнаяШирина3 = 16;
    Результат3 = ВыровнятьТекст(Слова3, МаксимальнаяШирина3);
    Сообщить("Результат для примера 3:");
    Для Каждого Строка Из Результат3 Цикл
        Сообщить(Строка);
	КонецЦикла;                               
                       
КонецПроцедуры