// 80. Удаление дубликатов из отсортированного массива II

// Дан целочисленный массив nums, отсортированный в порядке неубывания. 
// Удалите некоторые дубликаты на месте так, чтобы каждый уникальный элемент встречался не более двух раз. 
// Относительный порядок элементов должен остаться прежним.

// Поскольку в некоторых языках невозможно изменить длину массива, результат должен быть помещён в первую часть массива nums. 
// Если после удаления дубликатов осталось k элементов, то первые k элементов массива nums должны содержать конечный результат. 
// Неважно, что вы оставите после первых k элементов.

// Верните k после размещения конечного результата в первых k ячейках массива nums.

// Не выделяйте дополнительное пространство для другого массива. 
// Вы должны сделать это, изменив входной массив на месте с помощью O(1) дополнительной памяти. 

// Пример 1:
// Входные данные: nums = [1,1,1,2,2,3]
// Выходные данные: 5, nums = [1,1,2,2,3,_]
// Пояснение: Ваша функция должна возвращать k = 5, где первые пять элементов массива nums равны 1, 1, 2, 2 и 3 соответственно.
// Неважно, что вы оставляете после возвращённого k (поэтому это подчёркивания).

// Пример 2:
// Ввод: nums = [0,0,1,1,1,1,2,3,3]
// Вывод: 7, nums = [0,0,1,1,2,3,3,_,_]
// Объяснение: ваша функция должна возвращать k = 7, при этом первые семь элементов массива nums должны быть равны 0, 0, 1, 1, 2, 3 и 3 соответственно.
// Не имеет значения, что вы оставляете за пределами возвращаемого значения k (поэтому они обозначены подчёркиванием).
 

// Ограничения:
// 1 <= nums.length <= 3 * 10^4
// -10^4 <= nums[i] <= 10^4
// Числа в массиве nums отсортированы в порядке неубывания.

// 80. Remove Duplicates from Sorted Array II // LeetCode URL: https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/?envType=study-plan-v2&envId=top-interview-150

Функция УдалитьДубликаты(Массив)
    // Если длина массива меньше или равна 2, возвращаем его длину
    Если Массив.Количество() <= 2 Тогда
        Возврат Массив.Количество();
    КонецЕсли;

    // Указатель на текущую позицию для вставки уникального элемента
    ПозицияЗаписи = 2; // Первые два элемента всегда сохраняются (позиция 0, 1)

    // Проходим по массиву, начиная с третьего элемента (позиция 2)
    Для Индекс = 2 По Массив.Количество() - 1 Цикл
        // Если текущий элемент отличается от элемента на позиции ПозицияЗаписи - 2, оставляем его
        Если Массив[Индекс] <> Массив[ПозицияЗаписи - 2] Тогда
            Массив[ПозицияЗаписи] = Массив[Индекс]; // Копируем текущий элемент на позицию ПозицияЗаписи
            ПозицияЗаписи = ПозицияЗаписи + 1; // Увеличиваем указатель
        КонецЕсли;
    КонецЦикла;

    // Возвращаем количество уникальных элементов, которые встречаются не более двух раз
    Возврат ПозицияЗаписи;
КонецФункции

Процедура ПриНачалеРаботыСистемы()
	// Пример 1
    Массив1 = Новый Массив;
	Массив1 = СтрРазделить("1,1,1,2,2,3", ",");
    КоличествоУникальных = УдалитьДубликаты(Массив1);
    Сообщить("Количество уникальных элементов: " + КоличествоУникальных); 
    Сообщить("Массив после удаления дубликатов: " + СтрСоединить(Массив1, ", ")); 

	// Пример 2
	Массив2 = Новый Массив;
	Массив2 = СтрРазделить("0,0,1,1,1,1,2,3,3", ",");
	КоличествоУникальных = УдалитьДубликаты(Массив2);
	Сообщить("Количество уникальных элементов: " + КоличествоУникальных); 
	Сообщить("Массив после удаления дубликатов: " + СтрСоединить(Массив2, ", ")); 
КонецПроцедуры