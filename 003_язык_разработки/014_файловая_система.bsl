&НаСервере
Процедура ЧтениеИЗаписьФайловНаСервере()
 
    // Записать произвольное значение в файл
    Числа = Новый Массив;
    Числа.Добавить(35);
    Числа.Добавить(67);
    ЗначениеВФайл("числа.txt", Числа);
 
    // восстановить произвольное значение из файла     
    ЧислаИзФайла = ЗначениеИзФайла("числа.txt");
    Сообщить(ЧислаИзФайла[0]); // 35
    Сообщить(ЧислаИзФайла[1]); // 67
 
    // записать текстовый файл
    Текст = Новый ЗаписьТекста(
        "числа.txt", // имя
        КодировкаТекста.ANSI, // кодировка
        Символы.ПС, // разделитель строк (необ.)
        Ложь // перезаписывать файл, а не дописывать в конец (необ.)
    );    
    Текст.ЗаписатьСтроку("Добро пожаловать!");
    Текст.ЗаписатьСтроку("Посторонним вход воспрещен.");
    Текст.Закрыть();
 
    // прочитать текстовый файл
    Текст = Новый ЧтениеТекста(
        "числа.txt", // имя
        КодировкаТекста.ANSI, // кодировка
        Символы.ПС, // разделитель строк (необ.)
        ,
        Истина // монопольный режим (необ.)
    );
 
    // читаем пока есть что читать
    Пока Истина Цикл
        Строка = Текст.ПрочитатьСтроку();
        Если Строка = Неопределено Тогда
            Прервать;
        Иначе
            Сообщить(Строка);
        КонецЕсли;
    КонецЦикла;
 
КонецПроцедуры


&НаКлиенте
Процедура ОперацииНадФайлами(Команда)
 
    // создадим пустой файл
    Текст = Новый ЗаписьТекста("file_src.txt");
    Текст.Закрыть();
 
    // проверить существование файла      
    ФайлНаДиске = Новый Файл("file_src.txt");
    Если ФайлНаДиске.Существует() Тогда
        Сообщить("file_src.txt существует");
    КонецЕсли;
 
    // скопировать файл  
    КопироватьФайл(
        "file_src.txt", // что копируем
        "file_dest.txt" // куда копируем
    ); // перезапишет, если уже есть такой файл
 
    // переместить файл  
    ПереместитьФайл(
        "file_dest.txt",
        "file_new.txt"
    ); // перезапишет, если уже есть такой файл
 
    // найти файлы в каталоге  
    МассивНайденныхФайлов = НайтиФайлы(
        "", // где искать
        "*.txt", // маска поиска
        Ложь // если Истина, то будет искать и в подкаталогах
    );
 
    Для Каждого Файл Из МассивНайденныхФайлов Цикл
        Сообщить("Найден " + Файл.ПолноеИмя);
    КонецЦикла;
 
    // удалить файл 
    УдалитьФайлы(
        "file_new.txt"
    );
 
    // удалить файлы в каталоге по маске 
    УдалитьФайлы(
        "helpme1c", // заведомо не существующий каталог
        "*.txt" // маска для поиска удаляемых файлов
    ); // если опустить маску, то удалятся все файлы и каталог
 
    // получить имя временного файла 
    Сообщить(
        ПолучитьИмяВременногоФайла()
    ); // например, Temp\v8_11AE_4.tmp
 
    Сообщить(
        ПолучитьИмяВременногоФайла(".txt")
    ); // например, Temp\v8_11AE_5.txt
 
    // прочитать атрибуты файла 
    Ф = Новый Файл("file_src.txt");
    Сообщить(Ф.ПолучитьВремяИзменения()); // время последнего изменения файла
    Сообщить(Ф.ПолучитьТолькоЧтение()); // проверяем атрибут только чтение
    Сообщить(Ф.ПолучитьНевидимость()); // проверяем атрибут hidden (скрытность, невидимость)
 
    // установить атрибуты файла 
    Ф.УстановитьВремяИзменения(ТекущаяДата()); // меняем время последнего изменения файла
    Ф.УстановитьТолькоЧтение(Ложь); // меняем атрибут только чтение
    Ф.УстановитьНевидимость(Ложь); // меняем атрибут невидимости
  
	// узнать размер файла
    Сообщить(Ф.Размер()); // в байтах
 
    // узнать по пути файл это или каталог 
    Если Ф.ЭтоКаталог() Тогда
        Сообщить("Это каталог");
    ИначеЕсли Ф.ЭтоФайл() Тогда
        Сообщить("Это файл");
    КонецЕсли;
 
    // вытащить расширение файла из его пути 
    Сообщить(Ф.Расширение); // .txt
 
    // вытащить имя файла без расширения 
    Сообщить(Ф.ИмяБезРасширения); // file_src
 
КонецПроцедуры